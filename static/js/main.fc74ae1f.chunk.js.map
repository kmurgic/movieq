{"version":3,"sources":["Navigation/index.module.css","components/Notification/index.module.css","components/NotificationContainer/index.module.css","components/MovieCard/index.module.css","components/MovieCardContainer/index.module.css","actions/types.js","actions/index.js","Navigation/index.js","components/Notification/index.js","components/NotificationContainer/index.js","components/MovieCard/index.js","components/MovieCardContainer/index.js","pages/Discover/selectOptions.js","pages/Discover/DiscoverForm.js","components/PageNavigation/index.js","pages/Discover/index.js","pages/Search/SearchBar.js","pages/Search/index.js","pages/Queues/QueueItem.js","pages/Queues/Queue.js","pages/Queues/index.js","pages/Home/index.js","App.js","reducers/discoverReducer.js","reducers/searchReducer.js","reducers/queuesReducer.js","reducers/notificationsReducer.js","reducers/index.js","endpoints/discoverMovies.js","endpoints/searchMovies.js","sagas/index.js","store/index.js","index.js","pages/Queues/index.module.css","pages/Discover/index.module.css","pages/Search/index.module.css"],"names":["module","exports","DISCOVER_MOVIES_REQUEST","QUERY_MOVIES_REQUEST","QUEUE_ADD","NOTIFICATION_ADD","discoverMoviesRequest","filters","type","payload","discoverMoviesSuccess","movies","discoverMoviesError","errorMessage","queryMoviesSuccess","queryMoviesError","notificationAdd","heading","body","variant","notificationId","notificationRemove","Navigation","useState","expanded","setExpanded","handleSelect","Navbar","bg","expand","fixed","onToggle","prev","Brand","className","classes","brand","onClick","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","Link","Notification","props","dispatch","useDispatch","Toast","notification","onClose","Header","Body","defaultProps","NotificationContainer","notifications","useSelector","state","notificationList","map","key","MovieCard","movieId","overview","posterPath","releaseDate","title","queueList","queues","nextId","releaseYear","slice","clipOverviewIndex","search","clippedOverview","posterSrc","cardTitleText","movie","Card","card","Row","Img","src","Title","Text","Dropdown","Menu","queue","index","Item","queueIndex","queueId","queueName","name","find","duplicateMessage","successMessage","queueItemAdd","handleAddToQueueClick","MovieCardContainer","error","firstLoad","isLoading","Spinner","animation","spinner","length","CardDeck","movieData","poster_path","release_date","genres","ratings","initialFilters","genre","maxYear","minYear","maxRating","minRating","DiscoverForm","setPage","thisYear","Date","getFullYear","yearsSince1900","setFilters","handleOptionChange","e","currentTarget","value","newFilters","prevFilters","Form","Group","controlId","Label","Control","size","onChange","Array","_","yearsAgo","toString","rating","propsTypes","PropTypes","func","isRequired","PageNavigation","page","totalPages","items","push","Pagination","First","disabled","Prev","prevPage","number","active","Next","Last","Discover","discover","shallowEqual","moviesToDisplay","Math","ceil","SearchBar","handleSearch","query","setQuery","inline","onSubmit","preventDefault","InputGroup","FormControl","placeholder","Append","Button","icon","faSearch","Search","QueueItem","removeFromQueue","handleRemoveClick","draggableId","provided","ListGroup","ref","innerRef","draggableProps","dragHandleProps","action","Image","image","faTrashAlt","Queue","changeQueue","getRemoveFromQueueFunction","remove","reorder","editMode","setEditMode","editName","setEditName","hasValidated","setHasValidated","form","noValidate","stopPropagation","checkValidity","validated","maxLength","required","Feedback","save","faSave","previousEditMode","faPencilAlt","onDragEnd","result","destination","source","direction","droppableId","droppableProps","Queues","getReorderFunction","start","end","startPos","endPos","queueItemReorder","queueItemRemove","getRemoveFunction","queueRemove","faPlus","changes","queueChange","Home","App","useEffect","path","initialState","discoverReducer","searchReducer","addQueue","newQueue","removeQueue","findIndex","queueListCopy","splice","reorderQueue","queueToMove","addItemToQueue","oldQueue","reorderQueueItem","moviesCopy","movieToMove","removeQueueItem","movieIndex","queuesReducer","addNotification","newNotification","removeNotification","notificationIndex","notificationListCopy","notificationsReducer","rootReducer","combineReducers","options","method","mode","apiKey","process","a","Object","keys","forEach","genreParam","maxYearParam","minYearParam","maxRatingParam","queryString","url","totalResults","fetch","response","json","success","status_message","total_results","results","Error","discoverMovies","searchMovies","discoverMoviesSaga","watchDiscoverMovies","queryMoviesSaga","watchQueryMovies","removeNotificationAfterDelay","watchAddNotification","scrollToBottom","watchAddQueue","sagas","delay","time","Promise","resolve","setTimeout","call","put","message","takeLatest","takeEvery","window","scrollTo","document","scrollHeight","all","store","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","configureStore","ReactDOM","render","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,4B,oBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,oBCAjCD,EAAOC,QAAU,CAAC,uBAAyB,wD,oBCA3CD,EAAOC,QAAU,CAAC,KAAO,0B,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,sC,mOCDfC,EAA0B,0BAG1BC,EAAuB,uBAGvBC,EAAY,YAOZC,EAAmB,mBCJnBC,EAAwB,SAACC,GAAD,MAAc,CACjDC,KAAMN,EACNO,QAASF,IAGEG,EAAwB,SAACC,GAAD,MAAa,CAChDH,KDdqC,0BCerCC,QAASE,IAGEC,EAAsB,SAACC,GAAD,MAAmB,CACpDL,KDlBmC,wBCmBnCC,QAASI,IAQEC,EAAqB,SAACH,GAAD,MAAa,CAC7CH,KD1BkC,uBC2BlCC,QAASE,IAGEI,EAAmB,SAACF,GAAD,MAAmB,CACjDL,KD9BgC,qBC+BhCC,QAASI,IA0DEG,EAAkB,SAACC,EAASC,EAAMC,EAASC,GAAzB,MAA6C,CAC1EZ,KAAMH,EACNI,QAAS,CACPW,iBACAH,UACAC,OACAC,aAISE,EAAqB,SAACD,GAAD,MAAqB,CACrDZ,KD3FiC,sBC4FjCC,QAAS,CACPW,oB,0CC/CWE,EAtDI,WAAO,IAAD,EACSC,oBAAS,GADlB,mBAChBC,EADgB,KACNC,EADM,KAGjBC,EAAe,WACnBD,GAAY,IAGd,OACE,kBAACE,EAAA,EAAD,CACEC,GAAG,UACHT,QAAQ,OACRU,OAAO,KACPC,MAAM,MACNN,SAAUA,EACVO,SAAU,kBAAMN,GAAY,SAAAO,GAAI,OAAKA,OAErC,kBAACL,EAAA,EAAOM,MAAR,CACEC,UAAWC,IAAQC,MACnBC,QAASX,EACTY,GAAIC,IAASC,GAAG,aAHlB,WAOA,kBAACb,EAAA,EAAOc,OAAR,CAAeC,gBAAc,oBAC7B,kBAACf,EAAA,EAAOgB,SAAR,CAAiBC,GAAG,mBAClB,kBAACC,EAAA,EAAD,CAAKX,UAAU,mBACb,kBAACW,EAAA,EAAIC,KAAL,CACET,QAASX,EACTY,GAAIC,IACJC,GAAG,YAHL,YAOA,kBAACK,EAAA,EAAIC,KAAL,CACET,QAASX,EACTY,GAAIC,IACJC,GAAG,UAHL,UAOA,kBAACK,EAAA,EAAIC,KAAL,CACET,QAASX,EACTY,GAAIC,IACJC,GAAG,UAHL,iB,0BCvCJO,EAAe,SAAAC,GAAU,IACrB5B,EAA2C4B,EAA3C5B,eAAgBF,EAA2B8B,EAA3B9B,KAAMD,EAAqB+B,EAArB/B,QAASE,EAAY6B,EAAZ7B,QACjC8B,EAAWC,cAMjB,OACE,kBAACC,EAAA,EAAD,CACEjB,UAAS,aAAQf,EAAR,YAAmBgB,IAAQiB,cACpCC,QAP8B,WAChCJ,EAAS5B,EAAmBD,MAQ1B,kBAAC+B,EAAA,EAAMG,OAAP,CAAcpB,UAAU,aACtB,4BAAQA,UAAU,WAAWjB,IAE/B,kBAACkC,EAAA,EAAMI,KAAP,CAAYrB,UAAU,wBAAwBhB,KAKpD6B,EAAaS,aAAe,CAC1BvC,QAAS,cACTE,QAAS,WAUI4B,Q,kBCjBAU,EAlBe,SAACT,GAC7B,IAAMU,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cAAcG,oBAC/D,OACE,yBAAK3B,UAAWC,IAAO,wBACpBuB,EAAcI,KAAI,SAAAV,GAAY,OAC7B,kBAAC,EAAD,CACEW,IAAKX,EAAaR,GAClBxB,eAAgBgC,EAAaR,GAC7B1B,KAAMkC,EAAalC,KACnBD,QAASmC,EAAanC,QACtBE,QAASiC,EAAajC,e,6DCN1B6C,EAAY,SAAAhB,GAAU,IAClBiB,EAAsDjB,EAAtDiB,QAASC,EAA6ClB,EAA7CkB,SAAUC,EAAmCnB,EAAnCmB,WAAYC,EAAuBpB,EAAvBoB,YAAaC,EAAUrB,EAAVqB,MAC9CpB,EAAWC,cACToB,EAAcX,aAAY,SAAAC,GAAK,OAAIA,EAAMW,UAAzCD,UACFE,EAASb,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cAAcc,UAClDC,EAAcL,EAAYM,MAAM,EAAG,GAEnCC,EAAqBT,EAASQ,MAAM,EAAG,KAAME,OADL,0CAEH,EACrCC,EAAe,UAAMX,EAASQ,MAAM,EAAGC,GAAxB,OAGfG,EAAYX,EAAU,UAFN,oCAEM,OAAsBA,GAD5B,+EAEhBY,EAAa,UAAMV,GAAN,OAAcI,EAAW,YAAQA,EAAR,KAAyB,IAE/DO,EAAQ,CAAEpC,GAAIqB,EAASa,YAAWT,SAexC,OACE,kBAACY,EAAA,EAAD,CAAM/C,UAAS,UAAKC,IAAQ+C,KAAb,+BACb,kBAACC,EAAA,EAAD,CAAKjD,UAAU,SACb,kBAAC+C,EAAA,EAAKG,IAAN,CAAUlD,UAAU,yBAAyBf,QAAQ,MAAMkE,IAAKP,IAChE,kBAACG,EAAA,EAAK1B,KAAN,CACErB,UAAU,6DAEV,yBAAKA,UAAU,aACb,kBAAC+C,EAAA,EAAKK,MAAN,KACGP,GAEH,kBAACE,EAAA,EAAKM,KAAN,KACGV,IAGL,kBAACW,EAAA,EAAD,KACE,kBAACA,EAAA,EAAS/C,OAAV,CACEP,UAAU,6BACVf,QAAQ,qBAFV,gBAMA,kBAACqE,EAAA,EAASC,KAAV,KAEInB,EAAUR,KAAI,SAAC4B,EAAOC,GAAR,OACZ,kBAACH,EAAA,EAASI,KAAV,CACE7B,IAAK2B,EAAM9C,GACXP,QAAS,kBAzCG,SAACwD,GAAgB,IAAD,EACKvB,EAAUuB,GAA/CC,EADgC,EACpClD,GAAajC,EADuB,EACvBA,OAAcoF,EADS,EACfC,KAG7B,GAAIrF,EAAOsF,MAAK,SAAAjB,GAAK,OAAIA,EAAMpC,KAAOqB,KAAtC,CACE,IAAMiC,EAAgB,UAAM7B,EAAN,0BAA6B0B,GACnD9C,EAASjC,EAAgB,QAASkF,EAAkB,YAAa1B,QAFnE,CAKA,IAAM2B,EAAc,UAAM9B,EAAN,qBAAwB0B,GAC5C9C,EAASjC,EAAgB,UAAWmF,EAAgB,UAAW3B,IAC/DvB,EJiCwB,SAAC6C,EAASd,GAAV,MAAqB,CAC/CxE,KD5D4B,iBC6D5BC,QAAS,CACPqF,UACAd,UIrCSoB,CAAaN,EAASd,KA8BAqB,CAAsBV,KAEpCD,EAAMM,eAY3BhC,EAAUR,aAAe,CACvBU,SAAU,kBACVC,WAAY,GACZC,YAAa,GACbC,MAAO,YAWML,Q,kBC5CAsC,EA5CY,SAACtD,GAAW,IAC7BuD,EAAwCvD,EAAxCuD,MAAOC,EAAiCxD,EAAjCwD,UAAWC,EAAsBzD,EAAtByD,UAAW9F,EAAWqC,EAAXrC,OACrC,OAAI8F,EACF,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVxF,QAAQ,UACRe,UAAS,UAAKC,IAAQyE,QAAb,8BAITL,EACF,sGAGoB,IAAlB5F,EAAOkG,QAAgBL,EAAmB,qCAExB,IAAlB7F,EAAOkG,OACT,oEAIA,kBAACC,EAAA,EAAD,CAAU5E,UAAU,gDACjBvB,EAAOmD,KAAI,SAAAiD,GAAS,OACnB,kBAAC,EAAD,CACEhD,IAAKgD,EAAUnE,GACfsB,SAAU6C,EAAU7C,SACpBD,QAAS8C,EAAUnE,GACnBuB,WAAY4C,EAAUC,YACtB5C,YAAa2C,EAAUE,aACvB5C,MAAO0C,EAAU1C,a,yDCpCd6C,GAAS,CACpB,CACE,GAAM,GACN,KAAQ,UAEV,CACE,GAAM,GACN,KAAQ,aAEV,CACE,GAAM,GACN,KAAQ,aAEV,CACE,GAAM,GACN,KAAQ,UAEV,CACE,GAAM,GACN,KAAQ,SAEV,CACE,GAAM,GACN,KAAQ,eAEV,CACE,GAAM,GACN,KAAQ,SAEV,CACE,GAAM,MACN,KAAQ,UAEV,CACE,GAAM,GACN,KAAQ,WAEV,CACE,GAAM,GACN,KAAQ,WAEV,CACE,GAAM,GACN,KAAQ,UAEV,CACE,GAAM,MACN,KAAQ,SAEV,CACE,GAAM,KACN,KAAQ,WAEV,CACE,GAAM,MACN,KAAQ,WAEV,CACE,GAAM,IACN,KAAQ,mBAEV,CACE,GAAM,MACN,KAAQ,YAEV,CACE,GAAM,GACN,KAAQ,YAEV,CACE,GAAM,MACN,KAAQ,OAEV,CACE,GAAM,GACN,KAAQ,YAICC,GAAU,CACrB,IACA,QACA,KACA,K,6jBC3EF,IAAMC,GAAiB,CACrBC,MAAO,MACPC,QAAS,MACTC,QAAS,MACTC,UAAW,MACXC,UAAW,OAGPC,GAAe,SAAC1E,GAAW,IACvB2E,EAAY3E,EAAZ2E,QACFC,GAAW,IAAIC,MAAOC,cACtBC,EAAiBH,EAAW,KAHJ,EAIArG,mBAAS6F,IAJT,mBAIvB7G,EAJuB,KAIdyH,EAJc,KAKxB/E,EAAWC,cAEX+E,EAAqB,SAACC,GAAO,IAAD,EACRA,EAAEC,cAAlBnC,EADwB,EACxBA,KAAMoC,EADkB,EAClBA,MACRC,EAAU,MAAQ9H,EAAR,eAAkByF,EAAOoC,IACzCJ,GAAW,SAAAM,GAAW,aAAUA,EAAV,eAAwBtC,EAAOoC,OACrDnF,EAAS3C,EAAsB+H,IAC/BV,EAAQ,IAGV,OACE,kBAACY,EAAA,EAAD,CAAMrG,UAAU,2CACd,kBAACqG,EAAA,EAAKC,MAAN,CAAYtG,UAAS,UAAKC,IAAO,YAAkBsG,UAAU,oBAC3D,kBAACF,EAAA,EAAKG,MAAN,cAGA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,KACLtG,GAAG,SACH0D,KAAK,QACL6C,SAAUZ,EACVG,MAAO7H,EAAQ8G,OAEf,4BAAQtD,IAAK,MAAOqE,MAAO,OACxB,OAEFlB,GAAOpD,KAAI,SAACuD,GACX,OACE,4BAAQtD,IAAKsD,EAAMzE,GAAIwF,MAAOf,EAAMzE,IACjCyE,EAAMrB,WAMjB,kBAACuC,EAAA,EAAKC,MAAN,CAAYtG,UAAS,UAAKC,IAAO,YAAkBsG,UAAU,sBAC3D,kBAACF,EAAA,EAAKG,MAAN,iBAGA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,KACLtG,GAAG,SACH0D,KAAK,UACL6C,SAAUZ,EACVG,MAAO7H,EAAQ+G,SAEf,4BAAQvD,IAAK,MAAOqE,MAAO,OACxB,OAGF,YAAIU,MAAMf,EAAiB,IAAIjE,KAAI,SAACiF,EAAGC,GACtC,OACE,4BAAQjF,IAAKiF,EAAUZ,OAAQR,EAAWoB,GAAUC,aAChDrB,EAAWoB,GAAUC,iBAMjC,kBAACV,EAAA,EAAKC,MAAN,CAAYtG,UAAS,UAAKC,IAAO,YAAkBsG,UAAU,qBAC3D,kBAACF,EAAA,EAAKG,MAAN,iBAGA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,KACLtG,GAAG,SACH0D,KAAK,UACL6C,SAAUZ,EACVG,MAAO7H,EAAQgH,SAEf,4BAAQxD,IAAK,MAAOqE,MAAO,OACxB,OAGF,YAAIU,MAAMf,EAAiB,IAAIjE,KAAI,SAACiF,EAAGC,GACtC,OACE,4BAAQjF,IAAKiF,EAAUZ,OAAQR,EAAWoB,GAAUC,aAChDrB,EAAWoB,GAAUC,iBAMjC,kBAACV,EAAA,EAAKC,MAAN,CAAYtG,UAAS,UAAKC,IAAO,YAAkBsG,UAAU,qBAC3D,kBAACF,EAAA,EAAKG,MAAN,mBAGA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,KACLtG,GAAG,SACH0D,KAAK,YACL6C,SAAUZ,EACVG,MAAO7H,EAAQiH,WAEf,4BAAQzD,IAAK,MAAOqE,MAAO,OACxB,OAEFjB,GAAQrD,KAAI,SAACoF,GACZ,OACE,4BAAQnF,IAAKmF,EAAQd,MAAOc,GACzBA,UAUjBxB,GAAayB,WAAa,CACxBxB,QAASyB,IAAUC,KAAKC,YAGX5B,U,SC7EA6B,I,OArDQ,SAAAvG,GAAU,IACvBwG,EAA8BxG,EAA9BwG,KAAM7B,EAAwB3E,EAAxB2E,QAAS8B,EAAezG,EAAfyG,WACjBC,EAAQ,GACdA,EAAMC,KACJ,kBAACC,GAAA,EAAWC,MAAZ,CACEC,SAAUN,GAAQ,EAClBnH,QAAS,kBAAMsF,EAAQ,OAG3B+B,EAAMC,KACJ,kBAACC,GAAA,EAAWG,KAAZ,CACED,SAAUN,GAAQ,EAClBnH,QAAS,kBAAMsF,GAAQ,SAAAqC,GAAQ,OAAIA,EAAW,SAGlD,IAf8B,eAerBC,GACPP,EAAMC,KACJ,kBAACC,GAAA,EAAWhE,KAAZ,CACEvD,QAAS,kBAAMsF,EAAQsC,IACvBlG,IAAKkG,EACLC,OAAQD,IAAWT,GAClBS,KANEA,EAAS,EAAGA,GAAUR,EAAYQ,IAAW,EAA7CA,GAsBT,OAZAP,EAAMC,KACJ,kBAACC,GAAA,EAAWO,KAAZ,CACEL,SAAUN,GAAQC,EAClBpH,QAAS,kBAAMsF,GAAQ,SAAAqC,GAAQ,OAAIA,EAAW,SAGlDN,EAAMC,KACJ,kBAACC,GAAA,EAAWQ,KAAZ,CACEN,SAAUN,GAAQC,EAClBpH,QAAS,kBAAMsF,EAAQ8B,OAIzB,kBAACG,GAAA,EAAD,CACE1H,UAAU,yBACV0G,KAAK,MAEJc,KCZQW,GA7BE,WAAO,IAAD,EAC2B1G,aAAY,SAAAC,GAAK,OAAIA,EAAM0G,WAAUC,KAA7EhE,EADa,EACbA,MAAOC,EADM,EACNA,UAAWC,EADL,EACKA,UAAW9F,EADhB,EACgBA,OADhB,EAEGY,mBAAS,GAFZ,mBAEdiI,EAFc,KAER7B,EAFQ,KAIf6C,EAAkB7J,EAAO+D,MAAmB,IAAZ8E,EAAO,GAAgB,GAAPA,GAChDC,EAAagB,KAAKC,KAAK/J,EAAOkG,OAAS,IAE7C,OACE,oCACE,kBAAC,GAAD,CACEc,QAASA,IAEX,kBAAC,EAAD,CACEpB,QAASA,EACTC,UAAWA,EACXC,UAAWA,EACX9F,OAAQ6J,IAETf,EAAa,GACZ,kBAAC,GAAD,CACED,KAAMA,EACN7B,QAASA,EACT8B,WAAYA,M,iECuBPkB,GAzCG,SAAA3H,GAAU,IAClB4H,EAAiB5H,EAAjB4H,aADiB,EAECrJ,mBAAS,IAFV,mBAElBsJ,EAFkB,KAEXC,EAFW,KASzB,OACE,kBAACvC,EAAA,EAAD,CACErG,UAAU,iDACV6I,QAAM,EACNC,SATiB,SAAC9C,GACpBA,EAAE+C,iBACFL,EAAaC,KASX,kBAACK,GAAA,EAAD,CAAYhJ,UAAU,eACpB,kBAACiJ,GAAA,EAAD,CACE3K,KAAK,OACL4K,YAAY,uBACZlJ,UAAS,UAAKC,KAAQ,gBAAb,cACT0G,SAAU,SAACX,GAAD,OAAO4C,EAAS5C,EAAEC,cAAcC,QAC1CA,MAAOyC,IAET,kBAACK,GAAA,EAAWG,OAAZ,KACE,kBAACC,GAAA,EAAD,CACEpJ,UAAWC,KAAQ,iBACnB3B,KAAK,SACLW,QAAQ,qBAER,kBAAC,KAAD,CAAiBoK,KAAMC,KAAUnJ,QAASuI,SCDvCa,GA/BA,WACb,IAAMxI,EAAWC,cADE,EAE6BS,aAAY,SAAAC,GAAK,OAAIA,EAAMgB,SAAQ2F,KAA3EhE,EAFW,EAEXA,MAAOC,EAFI,EAEJA,UAAWC,EAFP,EAEOA,UAAW9F,EAFlB,EAEkBA,OAFlB,EAOKY,mBAAS,GAPd,mBAOZiI,EAPY,KAON7B,EAPM,KAQb6C,EAAkB7J,EAAO+D,MAAmB,IAAZ8E,EAAO,GAAgB,GAAPA,GAChDC,EAAagB,KAAKC,KAAK/J,EAAOkG,OAAS,IAE7C,OACE,oCACE,kBAAC,GAAD,CAAW+D,aAVM,SAACC,GACpB5H,EXa+C,CACjDzC,KAAML,EACNM,QWf8BoK,OAU1B,kBAAC,EAAD,CACEtE,QAASA,EACTC,UAAWA,EACXC,UAAWA,EACX9F,OAAQ6J,IAETf,EAAa,GACZ,kBAAC,GAAD,CACED,KAAMA,EACN7B,QAASA,EACT8B,WAAYA,M,gDC6BPiC,GAlDG,SAAA1I,GAAU,IAClBJ,EAAiDI,EAAjDJ,GAAI+C,EAA6C3C,EAA7C2C,MAAOb,EAAsC9B,EAAtC8B,UAAW6G,EAA2B3I,EAA3B2I,gBAAiBtH,EAAUrB,EAAVqB,MAEzCuH,EAAoB,WACxBD,KAGF,OACE,kBAAC,KAAD,CAAW5H,IAAKnB,EAAIiJ,YAAajJ,EAAI+C,MAAOA,IACzC,SAACmG,GAAD,OACC,kBAACC,GAAA,EAAUnG,KAAX,eACEoG,IAAKF,EAASG,UACVH,EAASI,eACTJ,EAASK,gBAHf,CAIE7J,GAAG,MACH8J,QAAM,EACNlK,UAAS,UAAKC,KAAQ,cAAb,mCAET,yBAAKD,UAAWC,KAAO,eACrB,kBAACkK,GAAA,EAAD,CACEnK,UAAS,UAAKC,KAAQmK,MAAb,cACTjH,IAAKP,KAGT,wBACE5C,UAAS,UAAKC,KAAQ,eAAb,qCACRkC,GAEH,kBAACiH,GAAA,EAAD,CACEpJ,UAAS,UAAKC,KAAO,YAAZ,cACTE,QAASuJ,EACThD,KAAK,KACLzH,QAAQ,UAER,kBAAC,KAAD,CAAiBoK,KAAMgB,aCyHpBC,GAtJD,SAAAxJ,GAAU,IAEpByJ,EACEzJ,EADFyJ,YAAaC,EACX1J,EADW0J,2BAA4BC,EACvC3J,EADuC2J,OAAQC,EAC/C5J,EAD+C4J,QAASjM,EACxDqC,EADwDrC,OAAQqF,EAChEhD,EADgEgD,KAF/C,EAIWzE,oBAAS,GAJpB,mBAIdsL,EAJc,KAIJC,EAJI,OAKWvL,mBAASyE,GALpB,mBAKd+G,EALc,KAKJC,EALI,OAMmBzL,oBAAS,GAN5B,mBAMd0L,EANc,KAMAC,EANA,KAwCrB,OACE,yBAAKhL,UAAS,UAAKC,KAAQuD,MAAb,+DACXiH,GACC,kBAACrB,GAAA,EAAD,CACEpJ,UAAS,UAAKC,KAAO,aAAZ,cACTE,QAASsK,EACTxL,QAAQ,UAER,kBAAC,KAAD,CAAiBoK,KAAMgB,QAG1BM,EAEG,kBAACtE,EAAA,EAAD,CACErG,UAAS,UAAKC,KAAQgL,KAAb,wCACTC,YAAU,EACVpC,SA7BW,SAAC9C,GACpBA,EAAE+C,iBACF/C,EAAEmF,kBACF,IAAMF,EAAOjF,EAAEC,cACf+E,GAAgB,IACa,IAAzBC,EAAKG,kBAGTJ,GAAgB,GAChBJ,GAAY,GACZL,EAAY,CAAEzG,KAAM+G,MAoBZQ,UAAWN,GAEX,kBAAC,KAAD,CAAY/K,UAAU,iDACpB,kBAACqG,EAAA,EAAKC,MAAN,CAAYC,UAAU,yBACpB,kBAACF,EAAA,EAAKI,QAAN,CACEzG,UAAS,UAAKC,KAAO,WAAZ,kBACTqL,UAAW,GACX3E,SAzCS,SAACX,GACxB8E,EAAY9E,EAAEC,cAAcC,QAyCdqF,UAAQ,EACRjN,KAAK,OACL4H,MAAO2E,IAET,kBAACxE,EAAA,EAAKI,QAAQ+E,SAAd,CAAuBlN,KAAK,WAA5B,wCAIF,kBAAC8K,GAAA,EAAD,CACEpJ,UAAWC,KAAQwL,KACnBnN,KAAK,SACLW,QAAQ,mBAER,kBAAC,KAAD,CAAiBoK,KAAMqC,UAM7B,wBAAI1L,UAAU,oBACX8D,EACD,kBAACsF,GAAA,EAAD,CACEpJ,UAAU,OACVG,QAhFW,WACrByK,GAAY,SAAAe,GAAgB,OAAKA,MAgFvB1M,QAAQ,mBAER,kBAAC,KAAD,CAAiBoK,KAAMuC,SAK9BnN,EAAOkG,OAEJ,kBAAE,KAAF,CAAkBkH,UAtFR,SAACC,GAEZA,EAAOC,aAGZrB,EACEoB,EAAOE,OAAOvI,MACdqI,EAAOC,YAAYtI,SAgFb,kBAAC,KAAD,CAAWwI,UAAU,aAAaC,YAAY,cAC3C,SAACtC,GAAD,OACC,kBAACC,GAAA,EAAD,eACE7J,UAAU,0EACN4J,EAASuC,eAFf,CAGErC,IAAKF,EAASG,WAEbtL,EAAOmD,KAAI,SAACkB,EAAOW,GAAW,IACrB/C,EAAyBoC,EAAzBpC,GAAIkC,EAAqBE,EAArBF,UAAWT,EAAUW,EAAVX,MACvB,OACE,kBAAC,GAAD,CACEN,IAAKnB,EACLA,GAAIA,EACJ+C,MAAOA,EACPb,UAAWA,EACX6G,gBAAiBe,EAA2B9J,GAC5CyB,MAAOA,OAIZyH,EAASV,iBAOlB,oCACE,uEACA,2BAAG,kBAAC,IAAD,CAAMlJ,UAAU,iBAAiBM,GAAG,aAApC,wBACH,2BAAG,kBAAC,IAAD,CAAMN,UAAU,iBAAiBM,GAAG,WAApC,yBC9EA8L,GA1DA,WACb,IAAMrL,EAAWC,cACXoB,EAAYX,aAAY,SAAAC,GAAK,OAAIA,EAAMW,OAAOD,YAAWiG,KAEzDgE,EAAqB,SAACzI,GAAD,OAAa,SAAC0I,EAAOC,GAC9CxL,EdgE4B,SAAC6C,EAAS4I,EAAUC,GAApB,MAAgC,CAC9DnO,KDnEgC,qBCoEhCC,QAAS,CACPqF,UACA4I,WACAC,WcrESC,CACP9I,EACA0I,EACAC,MAIE/B,EAA6B,SAAC5G,GAAD,OAAa,SAAC7B,GAAD,OAAa,WAC3DhB,EdiE2B,SAAC6C,EAAS7B,GAAV,MAAuB,CACpDzD,KD3E+B,oBC4E/BC,QAAS,CACPqF,UACA7B,YcrES4K,CAAgB/I,EAAS7B,OAO9B6K,EAAoB,SAAChJ,GACzB,OAAyB,IAArBxB,EAAUuC,OAAqB,KAC5B,kBAAM5D,EdgBU,SAAC6C,GAAD,MAAc,CACvCtF,KDxC0B,eCyC1BC,QAAS,CACPqF,YcnBsBiJ,CAAYjJ,MAOpC,OACE,oCACE,wBAAI5D,UAAU,oBAAd,YAEE,kBAACoJ,GAAA,EAAD,CACEpJ,UAAU,OACVG,QAVa,WACnBY,EdK+B,CACjCzC,KAAMJ,EACNK,QAAS,CACPuF,KcRkB,oBAUZ7E,QAAQ,mBAER,kBAAC,KAAD,CAAiBoK,KAAMyD,SAG3B,yBAAK9M,UAAU,sDACZoC,EAAUR,KAAI,SAAA4B,GAAK,OAClB,kBAAC,GAAD,CACE3B,IAAK2B,EAAM9C,GACX6J,aA7BsB3G,EA6BcJ,EAAM9C,GA7BR,SAACqM,GAC3ChM,EdoCuB,SAAC6C,EAASmJ,GAAV,MAAuB,CAChDzO,KDrD0B,eCsD1BC,QAAS,CACPqF,UACAmJ,YcxCSC,CAAYpJ,EAASmJ,MA6BtBtO,OAAQ+E,EAAM/E,OACdqF,KAAMN,EAAMM,KACZ2G,OAAQmC,EAAkBpJ,EAAM9C,IAChCgK,QAAS2B,EAAmB7I,EAAM9C,IAClC8J,2BAA4BA,EAA2BhH,EAAM9C,MAlCxC,IAACkD,QCfnBqJ,GANF,WACX,OACE,kBAAC,IAAD,CAAU3M,GAAG,e,cC2CF4M,OA/Bf,WACE,IAAMnM,EAAWC,cAMjB,OAJAmM,qBAAU,WACRpM,EAAS3C,OACR,CAAC2C,IAGF,kBAAC,IAAD,KACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoN,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,W,ylBCxCZ,IAAMC,GAAe,CACnBhJ,OAAO,EACPC,WAAW,EACXC,WAAW,EACX9F,OAAQ,IAkBK6O,GAfS,WAAmC,IAAlC5L,EAAiC,uDAAzB2L,GAAcnD,EAAW,uCACxD,OAAQA,EAAO5L,MACb,IAAK,0BACH,OAAO,MAAKoD,EAAZ,CAAmB2C,OAAO,EAAOC,WAAW,EAAOC,WAAW,IAChE,IAAK,0BACH,OAAO,MACF7C,EADL,CACY2C,OAAO,EAAOE,WAAW,EAAO9F,OAAQyL,EAAO3L,UAE7D,IAAK,wBACH,OAAO,MAAKmD,EAAZ,CAAmB2C,MAAO6F,EAAO3L,QAASgG,WAAW,IACvD,QACE,OAAO7C,I,6jBClBb,IAAM2L,GAAe,CACnBhJ,OAAO,EACPC,WAAW,EACXC,WAAW,EACX9F,OAAQ,IAgBK8O,GAbO,WAAmC,IAAlC7L,EAAiC,uDAAzB2L,GAAcnD,EAAW,uCACtD,OAAQA,EAAO5L,MACb,IAAK,uBACH,OAAO,MAAKoD,EAAZ,CAAmB2C,OAAO,EAAOC,WAAW,EAAOC,WAAW,IAChE,IAAK,uBACH,OAAO,MAAK7C,EAAZ,CAAmB2C,OAAO,EAAOE,WAAW,EAAO9F,OAAQyL,EAAO3L,UACpE,IAAK,qBACH,OAAO,MAAKmD,EAAZ,CAAmB2C,MAAO6F,EAAO3L,QAASgG,WAAW,IACvD,QACE,OAAO7C,I,6jBChBb,IAAM2L,GAAe,CACnB/K,OAAQ,EACRF,UAAW,CACT,CACE1B,GAAI,EACJoD,KAAM,YACNrF,OAAQ,MAKR+O,GAAW,SAAC9L,EAAOwI,GAAY,IAC3BpG,EAASoG,EAAO3L,QAAhBuF,KACF2J,EAAW,CACf/M,GAAIgB,EAAMY,OACVwB,OACArF,OAAQ,IAGV,OAAO,MAAKiD,EAAZ,CAAmBU,UADD,sBAAOV,EAAMU,WAAb,CAAwBqL,IACEnL,OAAQZ,EAAMY,OAAS,KAG/DoL,GAAc,SAAChM,EAAOwI,GAAY,IAC9BtG,EAAYsG,EAAO3L,QAAnBqF,QACFD,EAAajC,EAAMU,UAAUuL,WAAU,SAAAnK,GAAK,OAAIA,EAAM9C,KAAOkD,KACnE,IAAoB,IAAhBD,EACF,OAAOjC,EAET,IAAMkM,EAAa,YAAOlM,EAAMU,WAEhC,OADAwL,EAAcC,OAAOlK,EAAY,GAC1B,MAAKjC,EAAZ,CAAmBU,UAAWwL,KAG1BE,GAAe,SAACpM,EAAOwI,GAAY,IAAD,EACTA,EAAO3L,QAA5BiO,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,OACZmB,EAAa,YAAOlM,EAAMU,WAC1B2L,EAAcH,EAAcpB,GAKlC,OAHAoB,EAAcC,OAAOrB,EAAU,GAE/BoB,EAAcC,OAAOpB,EAAQ,EAAGsB,GACzB,MAAKrM,EAAZ,CAAmBU,UAAWwL,KAG1BrD,GAAc,SAAC7I,EAAOwI,GAAY,IAAD,EACRA,EAAO3L,QAA5BqF,EAD6B,EAC7BA,QAASmJ,EADoB,EACpBA,QACXpJ,EAAajC,EAAMU,UAAUuL,WAAU,SAAAnK,GAAK,OAAIA,EAAM9C,KAAOkD,KACnE,IAAoB,IAAhBD,EACF,OAAOjC,EAGT,IAAMkM,EAAa,YAAOlM,EAAMU,WAE1BqL,EAAQ,MADQG,EAAcjK,GACtB,GAA0BoJ,GAExC,OADAa,EAAcC,OAAOlK,EAAY,EAAG8J,GAC7B,MAAK/L,EAAZ,CAAmBU,UAAWwL,KAG1BI,GAAiB,SAACtM,EAAOwI,GAAY,IAAD,EACbA,EAAO3L,QAA1BqF,EADgC,EAChCA,QAASd,EADuB,EACvBA,MACXa,EAAajC,EAAMU,UAAUuL,WAAU,SAAAnK,GAAK,OAAIA,EAAM9C,KAAOkD,KACnE,IAAoB,IAAhBD,EACF,OAAOjC,EAET,IAAMuM,EAAQ,MAAQvM,EAAMU,UAAUuB,IAEhC8J,EAAQ,MAAQQ,EAAR,CAAkBxP,OADjB,sBAAOwP,EAASxP,QAAhB,CAAwBqE,MAGjC8K,EAAa,YAAOlM,EAAMU,WAEhC,OADAwL,EAAcC,OAAOlK,EAAY,EAAG8J,GAC7B,MAAK/L,EAAZ,CAAmBU,UAAWwL,KAG1BM,GAAmB,SAACxM,EAAOwI,GAAY,IAAD,EACJA,EAAO3L,QAArCqF,EADkC,EAClCA,QAAS4I,EADyB,EACzBA,SAAUC,EADe,EACfA,OACrB9I,EAAajC,EAAMU,UAAUuL,WAAU,SAAAnK,GAAK,OAAIA,EAAM9C,KAAOkD,KACnE,IAAoB,IAAhBD,EACF,OAAOjC,EAET,IAAMuM,EAAQ,MAAQvM,EAAMU,UAAUuB,IAEhCwK,EAAU,YAAOF,EAASxP,QAC1B2P,EAAcD,EAAW3B,GAE/B2B,EAAWN,OAAOrB,EAAU,GAE5B2B,EAAWN,OAAOpB,EAAQ,EAAG2B,GAC7B,IAAMX,EAAQ,MAAQQ,EAAR,CAAkBxP,OAAQ0P,IAClCP,EAAa,YAAOlM,EAAMU,WAEhC,OADAwL,EAAcC,OAAOlK,EAAY,EAAG8J,GAC7B,MAAK/L,EAAZ,CAAmBU,UAAWwL,KAG1BS,GAAkB,SAAC3M,EAAOwI,GAAY,IAAD,EACZA,EAAO3L,QAA5BqF,EADiC,EACjCA,QAAS7B,EADwB,EACxBA,QACX4B,EAAajC,EAAMU,UAAUuL,WAAU,SAAAnK,GAAK,OAAIA,EAAM9C,KAAOkD,KACnE,IAAoB,IAAhBD,EACF,OAAOjC,EAET,IAAMuM,EAAQ,MAAQvM,EAAMU,UAAUuB,IAEhCwK,EAAU,YAAOF,EAASxP,QAC1B6P,EAAaH,EAAWR,WAAU,SAAA7K,GAAK,OAAIA,EAAMpC,KAAOqB,KAC9D,IAAoB,IAAhBuM,EACF,OAAO5M,EAETyM,EAAWN,OAAOS,EAAY,GAC9B,IAAMb,EAAQ,MAAQQ,EAAR,CAAkBxP,OAAQ0P,IAClCP,EAAa,YAAOlM,EAAMU,WAEhC,OADAwL,EAAcC,OAAOlK,EAAY,EAAG8J,GAC7B,MAAK/L,EAAZ,CAAmBU,UAAWwL,KAwBjBW,GArBO,WAAmC,IAAlC7M,EAAiC,uDAAzB2L,GAAcnD,EAAW,uCACtD,OAAQA,EAAO5L,MACb,IAAK,YACH,OAAOkP,GAAS9L,EAAOwI,GACzB,IAAK,eACH,OAAOwD,GAAYhM,EAAOwI,GAC5B,IAAK,gBACH,OAAO4D,GAAapM,EAAOwI,GAC7B,IAAK,eACH,OAAOK,GAAY7I,EAAOwI,GAC5B,IAAK,iBACH,OAAO8D,GAAetM,EAAOwI,GAC/B,IAAK,qBACH,OAAOgE,GAAiBxM,EAAOwI,GACjC,IAAK,oBACH,OAAOmE,GAAgB3M,EAAOwI,GAChC,QACE,OAAOxI,I,6jBClIb,IAAM2L,GAAe,CACnB/K,OAAQ,EACRX,iBAAkB,IAId6M,GAAkB,SAAC9M,EAAOwI,GAAY,IAAD,EACNA,EAAO3L,QAAlCQ,EADiC,EACjCA,QAASC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QACjBwP,EAAkB,CACtB/N,GAAIgB,EAAMY,OACVvD,UACAC,OACAC,WAGF,OAAO,MAAKyC,EAAZ,CAAmBC,iBADM,sBAAOD,EAAMC,kBAAb,CAA+B8M,IACEnM,OAAQZ,EAAMY,OAAS,KAG7EoM,GAAqB,SAAChN,EAAOwI,GAAY,IACrChL,EAAmBgL,EAAO3L,QAA1BW,eACFyP,EAAoBjN,EAAMC,iBAAiBgM,WAAU,SAAAzM,GAAY,OAAIA,EAAaR,KAAOxB,KAC/F,IAA2B,IAAvByP,EACF,OAAOjN,EAET,IAAMkN,EAAoB,YAAOlN,EAAMC,kBAEvC,OADAiN,EAAqBf,OAAOc,EAAmB,GACxC,MAAKjN,EAAZ,CAAmBC,iBAAkBiN,KAcxBC,GAXc,WAAmC,IAAlCnN,EAAiC,uDAAzB2L,GAAcnD,EAAW,uCAC7D,OAAQA,EAAO5L,MACb,IAAK,mBACH,OAAOkQ,GAAgB9M,EAAOwI,GAChC,IAAK,sBACH,OAAOwE,GAAmBhN,EAAOwI,GACnC,QACE,OAAOxI,ICvBEoN,GAPKC,aAAgB,CAClC3G,SAAUkF,GACV9L,cAAeqN,GACfxM,OAAQkM,GACR7L,OAAQ6K,K,sCCVJyB,GAAU,CACdC,OAAQ,MACRC,KAAM,QAGFC,GAASC,mC,gDAEf,qEAAAC,EAAA,sDAA8BhR,EAA9B,+BAAwC,GACtCiR,OAAOC,KAAKlR,GAASmR,SAAQ,SAAA3N,GACN,QAAjBxD,EAAQwD,KAAgBxD,EAAQwD,GAAO,SAErCsD,EAAuC9G,EAAvC8G,MAAOC,EAAgC/G,EAAhC+G,QAASC,EAAuBhH,EAAvBgH,QAASC,EAAcjH,EAAdiH,UAE3BmK,EAAatK,EAAK,uBAAmBA,GAAU,GAC/CuK,EAAetK,EAAO,4BAAwBA,EAAxB,UAA0C,GAChEuK,EAAetK,EAAO,4BAAwBA,EAAxB,UAA0C,GAChEuK,EAAiBtK,EAAS,6BAAyBA,GAAc,uBAEjEuK,EAXR,UAWyBJ,GAXzB,OAWsCC,GAXtC,OAWqDC,GAXrD,OAWoEC,GAE5DE,EAAM,8DAAuDX,IAC/D,kFADQ,0CAE2BU,GACnCpR,EAAS,GACTsR,EAAe,GAjBrB,aAmBStR,EAAOkG,OAASoL,GAnBzB,4CAqB6BC,MAAMF,EAAKd,IArBxC,eAqBYiB,EArBZ,iBAsB0BA,EAASC,OAtBnC,YAuB2B,KADfA,EAtBZ,QAuBeC,QAvBf,uBAuBwCD,EAAKE,eAvB7C,QAwBUF,EAAKG,cAAgB,KAAIN,EAAeG,EAAKG,eACjD5R,EAAM,sBAAOA,GAAP,YAAkByR,EAAKI,UAzBnC,yDA2BY,IAAIC,MAAJ,MA3BZ,yDA+BS9R,GA/BT,4D,sBAmCe+R,O,4CC1CTxB,GAAU,CACdC,OAAQ,MACRC,KAAM,QAGFC,GAASC,mC,gDAEf,WAA4BzG,GAA5B,wBAAA0G,EAAA,sDACQS,EAAM,4DAAqDX,GAArD,oCACExG,EADF,8BAERlK,EAAS,GACTsR,EAAe,GAJrB,YAMStR,EAAOkG,OAASoL,GANzB,0CAQ6BC,MAAMF,EAAKd,IARxC,cAQYiB,EARZ,iBAS0BA,EAASC,OATnC,YAU2B,KADfA,EATZ,QAUeC,QAVf,uBAUwCD,EAAKE,eAV7C,QAWUF,EAAKG,cAAgB,KAAIN,EAAeG,EAAKG,eACjD5R,EAAM,sBAAOA,GAAP,YAAkByR,EAAKI,UAZnC,wDAcY,IAAIC,MAAJ,MAdZ,wDAkBS9R,GAlBT,2D,sBAsBegS,O,0DCnBLC,I,aASAC,I,aAIAC,I,aASAC,I,aAIAC,I,aAMOC,I,aAIAC,I,aAMAC,I,aAIQC,IAhDnBC,GAAQ,SAAAC,GAAI,OAAI,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAEjE,SAAUV,GAAmBxG,GAA7B,wEAEmB,OAFnB,kBAEyBsH,aAAKhB,GAAgBtG,EAAO3L,SAFrD,OAGI,OADME,EAFV,gBAGUgT,aAAIjT,EAAsBC,IAHpC,8BAKI,OALJ,mCAKUgT,aAAI/S,EAAoB,KAAMgT,UALxC,sDASA,SAAUf,KAAV,kEACE,OADF,SACQgB,aAAW3T,EAAyB0S,IAD5C,wCAIA,SAAUE,GAAgB1G,GAA1B,wEAEmB,OAFnB,kBAEyBsH,aAAKf,GAAcvG,EAAO3L,SAFnD,OAGI,OADME,EAFV,gBAGUgT,aAAI7S,EAAmBH,IAHjC,8BAKI,OALJ,mCAKUgT,aAAI5S,EAAiB,KAAM6S,UALrC,sDASA,SAAUb,KAAV,kEACE,OADF,SACQc,aAAW1T,EAAsB2S,IADzC,wCAIA,SAAUE,GAA6B5G,GAAvC,wEAEE,OADQhL,EAAmBgL,EAAO3L,QAA1BW,eADV,SAEQsS,aAAKL,GAAO,KAFpB,OAGE,OAHF,SAGQM,aAAItS,EAAmBD,IAH/B,wCAMO,SAAU6R,KAAV,kEACL,OADK,SACCa,aAAUzT,EAAkB2S,IAD7B,wCAIA,SAAUE,KAAV,kEAEL,OAFK,SAECQ,aAAKL,GAAO,IAFb,OAGL,OAHK,SAGCU,OAAOC,SAAS,EAAGC,SAAS/S,KAAKgT,cAHlC,wCAMA,SAAUf,KAAV,kEACL,OADK,SACCW,aAAU1T,EAAW8S,IADtB,wCAIQ,SAAUE,KAAV,kEACb,OADa,SACPe,aAAI,CACRtB,KACAE,KACAE,KACAE,OALW,wCCnDf,ICEMiB,GDFiB,WACrB,IAAMC,EAAiBC,eACjBF,EAAQG,aACZC,GACAC,aAAgBJ,IAIlB,OADAA,EAAeK,IAAItB,IACZgB,ECNKO,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,IACf,kBAAC,GAAD,OAEFH,SAASa,eAAe,U,mBCZ1B9U,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,aAAe,6BAA6B,KAAO,qBAAqB,KAAO,qBAAqB,WAAa,2BAA2B,aAAa,2BAA2B,cAAgB,8BAA8B,MAAQ,sBAAsB,YAAc,4BAA4B,OAAS,yB,mBCAnWD,EAAOC,QAAU,CAAC,WAAa,+B,mBCA/BD,EAAOC,QAAU,CAAC,eAAe,6BAA6B,gBAAgB,iC","file":"static/js/main.fc74ae1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brand\":\"Navigation_brand__1EdN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2SVrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification_container\":\"NotificationContainer_notification_container__1F9zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__2Pkvo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"MovieCardContainer_spinner__3FBAa\"};","export const DISCOVER_MOVIES_REQUEST = 'DISCOVER_MOVIES_REQUEST';\nexport const DISCOVER_MOVIES_SUCCESS = 'DISCOVER_MOVIES_SUCCESS';\nexport const DISCOVER_MOVIES_ERROR = 'DISCOVER_MOVIES_ERROR';\nexport const QUERY_MOVIES_REQUEST = 'QUERY_MOVIES_REQUEST';\nexport const QUERY_MOVIES_SUCCESS = 'QUERY_MOVIES_SUCCESS';\nexport const QUERY_MOVIES_ERROR = 'QUERY_MOVIES_ERROR';\nexport const QUEUE_ADD = 'QUEUE_ADD';\nexport const QUEUE_REMOVE = 'QUEUE_REMOVE';\nexport const QUEUE_REORDER = 'QUEUE_REORDER';\nexport const QUEUE_CHANGE = 'QUEUE_CHANGE';\nexport const QUEUE_ITEM_ADD = 'QUEUE_ITEM_ADD';\nexport const QUEUE_ITEM_REORDER = 'QUEUE_ITEM_REORDER';\nexport const QUEUE_ITEM_REMOVE = 'QUEUE_ITEM_REMOVE';\nexport const NOTIFICATION_ADD = 'NOTIFICATION_ADD';\nexport const NOTIFICATION_REMOVE = 'NOTIFICATION_REMOVE';\n","import {\n  DISCOVER_MOVIES_REQUEST, DISCOVER_MOVIES_SUCCESS, DISCOVER_MOVIES_ERROR,\n  QUERY_MOVIES_SUCCESS, QUERY_MOVIES_ERROR, QUEUE_ADD, QUEUE_REMOVE, QUEUE_ITEM_ADD,\n  QUEUE_ITEM_REORDER, QUEUE_ITEM_REMOVE, NOTIFICATION_ADD, NOTIFICATION_REMOVE,\n  QUEUE_REORDER, QUEUE_CHANGE,\n} from './types';\nimport { QUERY_MOVIES_REQUEST } from './types';\n\n\nexport const discoverMoviesRequest = (filters) => ({\n  type: DISCOVER_MOVIES_REQUEST,\n  payload: filters,\n});\n\nexport const discoverMoviesSuccess = (movies) => ({\n  type: DISCOVER_MOVIES_SUCCESS,\n  payload: movies,\n});\n\nexport const discoverMoviesError = (errorMessage) => ({\n  type: DISCOVER_MOVIES_ERROR,\n  payload: errorMessage,\n});\n\nexport const queryMoviesRequest = (searchTerm) => ({\n  type: QUERY_MOVIES_REQUEST,\n  payload: searchTerm,\n});\n\nexport const queryMoviesSuccess = (movies) => ({\n  type: QUERY_MOVIES_SUCCESS,\n  payload: movies,\n});\n\nexport const queryMoviesError = (errorMessage) => ({\n  type: QUERY_MOVIES_ERROR,\n  payload: errorMessage,\n});\n\nexport const queueAdd = (name) => ({\n  type: QUEUE_ADD,\n  payload: {\n    name,\n  },\n});\n\nexport const queueRemove = (queueId) => ({\n  type: QUEUE_REMOVE,\n  payload: {\n    queueId,\n  },\n});\n\nexport const queueReorder = (startPos, endPos) => ({\n  type: QUEUE_REORDER,\n  payload: {\n    startPos,\n    endPos,\n  },\n});\n\nexport const queueChange = (queueId, changes) => ({\n  type: QUEUE_CHANGE,\n  payload: {\n    queueId,\n    changes,\n  },\n});\n\nexport const queueItemAdd = (queueId, movie) => ({\n  type: QUEUE_ITEM_ADD,\n  payload: {\n    queueId,\n    movie,\n  },\n});\n\nexport const queueItemReorder = (queueId, startPos, endPos) => ({\n  type: QUEUE_ITEM_REORDER,\n  payload: {\n    queueId,\n    startPos,\n    endPos,\n  },\n});\n\nexport const queueItemRemove = (queueId, movieId) => ({\n  type: QUEUE_ITEM_REMOVE,\n  payload: {\n    queueId,\n    movieId,\n  },\n});\n\nexport const notificationAdd = (heading, body, variant, notificationId) => ({\n  type: NOTIFICATION_ADD,\n  payload: {\n    notificationId,\n    heading,\n    body,\n    variant,\n  }\n});\n\nexport const notificationRemove = (notificationId) => ({\n  type: NOTIFICATION_REMOVE,\n  payload: {\n    notificationId,\n  }\n});\n","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from \"react-router-dom\";\nimport classes from './index.module.css';\n\nconst Navigation = () => {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleSelect = () => {\n    setExpanded(false);\n  }\n\n  return (\n    <Navbar\n      bg=\"primary\"\n      variant=\"dark\"\n      expand=\"lg\"\n      fixed=\"top\"\n      expanded={expanded}\n      onToggle={() => setExpanded(prev => !prev)}\n    >\n      <Navbar.Brand\n        className={classes.brand}\n        onClick={handleSelect}\n        as={NavLink} to=\"/discover\"\n      >\n        Movie Q\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"main-navbar-nav\" />\n      <Navbar.Collapse id=\"main-navbar-nav\">\n        <Nav className=\"ml-auto mr-sm-2\">\n          <Nav.Link\n            onClick={handleSelect}\n            as={NavLink}\n            to=\"discover\"\n          >\n            Discover\n          </Nav.Link>\n          <Nav.Link\n            onClick={handleSelect}\n            as={NavLink}\n            to=\"search\"\n          >\n            Search\n          </Nav.Link>\n          <Nav.Link\n            onClick={handleSelect}\n            as={NavLink}\n            to=\"queues\"\n          >\n            My Queues\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\n\nexport default Navigation;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Toast from 'react-bootstrap/Toast';\nimport { notificationRemove } from '../../actions/';\nimport classes from './index.module.css';\n\nconst Notification = props => {\n  const { notificationId, body, heading, variant } = props;\n  const dispatch = useDispatch();\n\n  const handleDismissNotification = () => {\n    dispatch(notificationRemove(notificationId));\n  };\n\n  return (\n    <Toast\n      className={`bg-${variant} ${classes.notification}`}\n      onClose={handleDismissNotification}\n    >\n      <Toast.Header className=\"text-dark\">\n        <strong className=\"mr-auto\">{heading}</strong>\n      </Toast.Header>\n      <Toast.Body className=\"pl-3 pr-3 text-white\">{body}</Toast.Body>\n    </Toast>\n  )\n}\n\nNotification.defaultProps = {\n  heading: 'Movie Queue',\n  variant: 'success',\n}\n\nNotification.propTypes = {\n  notificationId: PropTypes.number.isRequired,\n  heading: PropTypes.string,\n  body: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['success', 'danger', 'secondary']),\n}\n\nexport default Notification;\n","import React from 'react';\nimport Notification from '../Notification';\nimport { useSelector } from 'react-redux';\nimport classes from './index.module.css';\n\nconst NotificationContainer = (props) => {\n  const notifications = useSelector(state => state.notifications.notificationList);\n  return (\n    <div className={classes['notification_container']}>\n      {notifications.map(notification => (\n        <Notification\n          key={notification.id}\n          notificationId={notification.id}\n          body={notification.body}\n          heading={notification.heading}\n          variant={notification.variant}\n        />\n      ))\n      }\n    </div>\n  );\n};\n\nexport default NotificationContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport classes from './index.module.css'\nimport { queueItemAdd, notificationAdd } from '../../actions/';\n\nconst MovieCard = props => {\n  const { movieId, overview, posterPath, releaseDate, title } = props;\n  const dispatch = useDispatch();\n  const { queueList } = useSelector(state => state.queues);\n  const nextId = useSelector(state => state.notifications.nextId);\n  const releaseYear = releaseDate.slice(0, 4);\n  const lastCharacterBeforePunctuationOrSpace = /[\\w'\"][:.\\s,!?-](?!.*[\\w'\"][:.\\s,!?-])/\n  const clipOverviewIndex = (overview.slice(0, 140)).search(\n    lastCharacterBeforePunctuationOrSpace) + 1;\n  const clippedOverview = `${overview.slice(0, clipOverviewIndex)}...`;\n  const imageBasePath = 'https://image.tmdb.org/t/p/w200/'\n  const fallbackImage = 'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\n  const posterSrc = posterPath ? `${imageBasePath}${posterPath}` : fallbackImage;\n  const cardTitleText = `${title}${releaseYear ? ` (${releaseYear})` : ''}`;\n\n  const movie = { id: movieId, posterSrc, title };\n  const handleAddToQueueClick = (queueIndex) => {\n    const { id: queueId, movies, name: queueName } = queueList[queueIndex];\n\n    // Avoid adding a movie to a list twice!\n    if (movies.find(movie => movie.id === movieId)) {\n      const duplicateMessage = `${title} is already in ${queueName}`;\n      dispatch(notificationAdd('Oops!', duplicateMessage, 'secondary', nextId));\n      return;\n    }\n    const successMessage = `${title} Added To ${queueName}`;\n    dispatch(notificationAdd('Success', successMessage, 'success', nextId));\n    dispatch(queueItemAdd(queueId, movie));\n  };\n\n  return (\n    <Card className={`${classes.card} mb-4 d-flex-inline shadow`}>\n      <Row className=\"h-100\">\n        <Card.Img className=\"h-100 col-sm-6 pr-sm-0\" variant=\"top\" src={posterSrc} />\n        <Card.Body\n          className=\"d-flex flex-column justify-content-between h-100 col-sm-6\"\n        >\n          <div className=\"mr-2 ml-2\">\n            <Card.Title>\n              {cardTitleText}\n            </Card.Title>\n            <Card.Text>\n              {clippedOverview}\n            </Card.Text>\n          </div>\n          <Dropdown>\n            <Dropdown.Toggle\n              className='mt-4 align-self-start ml-2'\n              variant=\"outline-secondary\"\n            >\n              Add to Queue\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {\n                queueList.map((queue, index) => (\n                  <Dropdown.Item\n                    key={queue.id}\n                    onClick={() => handleAddToQueueClick(index)}\n                  >\n                    {queue.name}\n                  </Dropdown.Item>\n                ))\n              }\n            </Dropdown.Menu>\n          </Dropdown>\n        </Card.Body>\n      </Row>\n    </Card>\n  )\n}\n\nMovieCard.defaultProps = {\n  overview: 'No description.',\n  posterPath: '',\n  releaseDate: '',\n  title: 'Untitled',\n}\n\nMovieCard.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  overview: PropTypes.string,\n  posterPath: PropTypes.string,\n  releaseDate: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Spinner from 'react-bootstrap/Spinner';\nimport MovieCard from '../MovieCard';\nimport classes from './index.module.css';\n\nconst MovieCardContainer = (props) => {\n  const { error, firstLoad, isLoading, movies } = props;\n  if (isLoading) return (\n    <Spinner\n      animation=\"border\"\n      variant=\"primary\"\n      className={`${classes.spinner} ml-auto mr-auto d-block`}\n    />\n  );\n\n  if (error) return (\n    <p>We're sorry, something went wrong.  Please try refreshing your browser.</p>\n  );\n\n  if (movies.length === 0 && firstLoad) return (<></>);\n\n  if (movies.length === 0) return (\n    <p>Your search did not match any movies.</p>\n  );\n\n  return (\n    <CardDeck className=\"d-flex justify-content-center flex-wrap mt-4\">\n      {movies.map(movieData => (\n        <MovieCard\n          key={movieData.id}\n          overview={movieData.overview}\n          movieId={movieData.id}\n          posterPath={movieData.poster_path}\n          releaseDate={movieData.release_date}\n          title={movieData.title}\n        />\n      ))\n      }\n    </CardDeck>\n  );\n};\n\nMovieCardContainer.propTypes = {\n  error: PropTypes.bool.isRequired,\n  firstLoad: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default MovieCardContainer;\n","export const genres = [\n  {\n    \"id\": 28,\n    \"name\": \"Action\"\n  },\n  {\n    \"id\": 12,\n    \"name\": \"Adventure\"\n  },\n  {\n    \"id\": 16,\n    \"name\": \"Animation\"\n  },\n  {\n    \"id\": 35,\n    \"name\": \"Comedy\"\n  },\n  {\n    \"id\": 80,\n    \"name\": \"Crime\"\n  },\n  {\n    \"id\": 99,\n    \"name\": \"Documentary\"\n  },\n  {\n    \"id\": 18,\n    \"name\": \"Drama\"\n  },\n  {\n    \"id\": 10751,\n    \"name\": \"Family\"\n  },\n  {\n    \"id\": 14,\n    \"name\": \"Fantasy\"\n  },\n  {\n    \"id\": 36,\n    \"name\": \"History\"\n  },\n  {\n    \"id\": 27,\n    \"name\": \"Horror\"\n  },\n  {\n    \"id\": 10402,\n    \"name\": \"Music\"\n  },\n  {\n    \"id\": 9648,\n    \"name\": \"Mystery\"\n  },\n  {\n    \"id\": 10749,\n    \"name\": \"Romance\"\n  },\n  {\n    \"id\": 878,\n    \"name\": \"Science Fiction\"\n  },\n  {\n    \"id\": 10770,\n    \"name\": \"TV Movie\"\n  },\n  {\n    \"id\": 53,\n    \"name\": \"Thriller\"\n  },\n  {\n    \"id\": 10752,\n    \"name\": \"War\"\n  },\n  {\n    \"id\": 37,\n    \"name\": \"Western\"\n  }\n];\n\nexport const ratings = [\n  'R',\n  'PG-13',\n  'PG',\n  'G',\n];\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport classes from './index.module.css';\nimport { genres, ratings } from './selectOptions';\nimport { discoverMoviesRequest } from '../../actions';\n\nconst initialFilters = {\n  genre: 'Any',\n  maxYear: 'Any',\n  minYear: 'Any',\n  maxRating: 'Any',\n  minRating: 'Any',\n};\n\nconst DiscoverForm = (props) => {\n  const { setPage } = props;\n  const thisYear = new Date().getFullYear();\n  const yearsSince1900 = thisYear - 1900;\n  const [filters, setFilters] = useState(initialFilters);\n  const dispatch = useDispatch();\n\n  const handleOptionChange = (e) => {\n    const { name, value } = e.currentTarget;\n    const newFilters = { ...filters, [name]: value };\n    setFilters(prevFilters => ({ ...prevFilters, [name]: value }));\n    dispatch(discoverMoviesRequest(newFilters));\n    setPage(1);\n  };\n\n  return (\n    <Form className=\"d-flex justify-content-center flex-wrap\">\n      <Form.Group className={`${classes['form_group']}`} controlId=\"select-max_genre\">\n        <Form.Label>\n          Genre\n        </Form.Label>\n        <Form.Control\n          size=\"lg\"\n          as=\"select\"\n          name=\"genre\"\n          onChange={handleOptionChange}\n          value={filters.genre}\n        >\n          <option key={'Any'} value={'Any'}>\n            {'Any'}\n          </option>\n          {genres.map((genre) => {\n            return (\n              <option key={genre.id} value={genre.id}>\n                {genre.name}\n              </option>\n            )\n          })}\n        </Form.Control>\n      </ Form.Group>\n      <Form.Group className={`${classes['form_group']}`} controlId=\"select-before_year\">\n        <Form.Label>\n          Max Year\n        </Form.Label>\n        <Form.Control\n          size=\"lg\"\n          as=\"select\"\n          name=\"maxYear\"\n          onChange={handleOptionChange}\n          value={filters.maxYear}\n        >\n          <option key={'Any'} value={'Any'}>\n            {'Any'}\n          </option>\n          {/* Add filters for all the years from 1900 until now */}\n          {[...Array(yearsSince1900 + 1)].map((_, yearsAgo) => {\n            return (\n              <option key={yearsAgo} value={(thisYear - yearsAgo).toString()}>\n                {(thisYear - yearsAgo).toString()}\n              </option>\n            )\n          })}\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className={`${classes['form_group']}`} controlId=\"select-after_year\">\n        <Form.Label>\n          Min Year\n        </Form.Label>\n        <Form.Control\n          size=\"lg\"\n          as=\"select\"\n          name=\"minYear\"\n          onChange={handleOptionChange}\n          value={filters.minYear}\n        >\n          <option key={'Any'} value={'Any'}>\n            {'Any'}\n          </option>\n          {/* Add filters for all the years from 1900 until now */}\n          {[...Array(yearsSince1900 + 1)].map((_, yearsAgo) => {\n            return (\n              <option key={yearsAgo} value={(thisYear - yearsAgo).toString()}>\n                {(thisYear - yearsAgo).toString()}\n              </option>\n            )\n          })}\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className={`${classes['form_group']}`} controlId=\"select-max_rating\">\n        <Form.Label>\n          Max Rating\n        </Form.Label>\n        <Form.Control\n          size=\"lg\"\n          as=\"select\"\n          name=\"maxRating\"\n          onChange={handleOptionChange}\n          value={filters.maxRating}\n        >\n          <option key={'Any'} value={'Any'}>\n            {'Any'}\n          </option>\n          {ratings.map((rating) => {\n            return (\n              <option key={rating} value={rating}>\n                {rating}\n              </option>\n            )\n          })}\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  )\n};\n\nDiscoverForm.propsTypes = {\n  setPage: PropTypes.func.isRequired,\n};\n\nexport default DiscoverForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'react-bootstrap/Pagination';\nimport './index.css';\n\nconst PageNavigation = props => {\n  const { page, setPage, totalPages } = props;\n  const items = [];\n  items.push(\n    <Pagination.First\n      disabled={page <= 1}\n      onClick={() => setPage(1)}\n    />\n  );\n  items.push(\n    <Pagination.Prev\n      disabled={page <= 1}\n      onClick={() => setPage(prevPage => prevPage - 1)}\n    />\n  );\n  for (let number = 1; number <= totalPages; number++) {\n    items.push(\n      <Pagination.Item\n        onClick={() => setPage(number)}\n        key={number}\n        active={number === page}>\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  items.push(\n    <Pagination.Next\n      disabled={page >= totalPages}\n      onClick={() => setPage(prevPage => prevPage + 1)}\n    />\n  );\n  items.push(\n    <Pagination.Last\n      disabled={page >= totalPages}\n      onClick={() => setPage(totalPages)}\n    />\n  );\n  return (\n    <Pagination\n      className=\"justify-content-center\"\n      size=\"lg\"\n    >\n      {items}\n    </Pagination>\n  )\n}\n\nPageNavigation.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n}\n\nexport default PageNavigation;\n","import React, { useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport MovieCardContainer from '../../components/MovieCardContainer';\nimport DiscoverForm from './DiscoverForm';\nimport PageNavigation from '../../components/PageNavigation';\n\nconst Discover = () => {\n  const { error, firstLoad, isLoading, movies } = useSelector(state => state.discover, shallowEqual);\n  const [page, setPage] = useState(1);\n\n  const moviesToDisplay = movies.slice((page - 1) * 12, page * 12);\n  const totalPages = Math.ceil(movies.length / 12);\n\n  return (\n    <>\n      <DiscoverForm\n        setPage={setPage}\n      />\n      <MovieCardContainer\n        error={!!error}\n        firstLoad={firstLoad}\n        isLoading={isLoading}\n        movies={moviesToDisplay}\n      />\n      {totalPages > 1 && (\n        <PageNavigation\n          page={page}\n          setPage={setPage}\n          totalPages={totalPages}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Discover;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport classes from './index.module.css';\n\nconst SearchBar = props => {\n  const { handleSearch } = props;\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    handleSearch(query)\n  }\n\n  return (\n    <Form\n      className=\"d-flex justify-content-center flex-nowrap mb-4\"\n      inline\n      onSubmit={handleSubmit}\n    >\n      <InputGroup className=\"flex-nowrap\">\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search for Movies...\"\n          className={`${classes['search-input']} w-50 mr-0`}\n          onChange={(e) => setQuery(e.currentTarget.value)}\n          value={query}\n        />\n        <InputGroup.Append>\n          <Button\n            className={classes['search-button']}\n            type=\"submit\"\n            variant=\"outline-secondary\"\n          >\n            <FontAwesomeIcon icon={faSearch} onClick={handleSearch} />\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form>\n  );\n}\n\nSearchBar.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport SearchBar from './SearchBar';\nimport { queryMoviesRequest } from '../../actions';\nimport MovieCardContainer from '../../components/MovieCardContainer';\nimport PageNavigation from '../../components/PageNavigation';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const { error, firstLoad, isLoading, movies } = useSelector(state => state.search, shallowEqual);\n  const handleSearch = (query) => {\n    dispatch(queryMoviesRequest(query));\n  };\n\n  const [page, setPage] = useState(1);\n  const moviesToDisplay = movies.slice((page - 1) * 12, page * 12);\n  const totalPages = Math.ceil(movies.length / 12);\n\n  return (\n    <>\n      <SearchBar handleSearch={handleSearch} />\n      <MovieCardContainer\n        error={!!error}\n        firstLoad={firstLoad}\n        isLoading={isLoading}\n        movies={moviesToDisplay}\n      />\n      {totalPages > 1 && (\n        <PageNavigation\n          page={page}\n          setPage={setPage}\n          totalPages={totalPages}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport classes from './index.module.css'\nimport PropTypes from 'prop-types';\n\nconst QueueItem = props => {\n  const { id, index, posterSrc, removeFromQueue, title } = props;\n\n  const handleRemoveClick = () => {\n    removeFromQueue();\n  }\n\n  return (\n    <Draggable key={id} draggableId={id} index={index}>\n      {(provided) => (\n        <ListGroup.Item\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          as=\"div\"\n          action\n          className={`${classes['queue-item']} mx-1 mb-3 p-0 bg-transparent`}\n        >\n          <div className={classes['image_overlay']}>\n            <Image\n              className={`${classes.image} m-0 w-100`}\n              src={posterSrc}\n            />\n          </div>\n          <h5\n            className={`${classes['movie-title']} mb-0 p-3 text-center text-black`}>\n            {title}\n          </h5>\n          <Button\n            className={`${classes['remove_item']} shadow-lg`}\n            onClick={handleRemoveClick}\n            size='lg'\n            variant=\"danger\"\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </Button>\n        </ListGroup.Item>\n      )}\n    </Draggable>\n  )\n}\n\nQueueItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  posterSrc: PropTypes.string.isRequired,\n  removeFromQueue: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default QueueItem;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport InputGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport QueueItem from './QueueItem';\nimport classes from './index.module.css';\n\n\nconst Queue = props => {\n  const {\n    changeQueue, getRemoveFromQueueFunction, remove, reorder, movies, name,\n  } = props;\n  const [editMode, setEditMode] = useState(false);\n  const [editName, setEditName] = useState(name);\n  const [hasValidated, setHasValidated] = useState(false)\n\n  const toggleEditMode = () => {\n    setEditMode(previousEditMode => !previousEditMode);\n  }\n\n  const onDragEnd = (result) => {\n    // dropped outside list\n    if (!result.destination) {\n      return;\n    }\n    reorder(\n      result.source.index, //start position\n      result.destination.index, //end position\n    );\n  };\n\n  const handleNameChange = (e) => {\n    setEditName(e.currentTarget.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const form = e.currentTarget;\n    setHasValidated(true);\n    if (form.checkValidity() === false) {\n      return;\n    }\n    setHasValidated(false);\n    setEditMode(false);\n    changeQueue({ name: editName });\n  }\n\n  return (\n    <div className={`${classes.queue} text-center bg-light px-5 pt-4 pb-3 m-sm-4 d-inline-block`}>\n      {remove && (\n        <Button\n          className={`${classes['remove_queue']} shadow-lg`}\n          onClick={remove}\n          variant=\"danger\"\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </Button>\n      )}\n      {editMode\n        ? (\n          <Form\n            className={`${classes.form} d-inline-block ml-auto mr-auto mb-3`}\n            noValidate\n            onSubmit={handleSubmit}\n            validated={hasValidated}\n          >\n            <InputGroup className=\"d-flex flex-row align-items-start flex-nowrap\">\n              <Form.Group controlId=\"queue-name_input pr-0\">\n                <Form.Control\n                  className={`${classes['name_input']} w-75 d-inline`}\n                  maxLength={25}\n                  onChange={handleNameChange}\n                  required\n                  type=\"text\"\n                  value={editName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please enter a name for this queue.\n              </Form.Control.Feedback>\n              </Form.Group>\n              <Button\n                className={classes.save}\n                type=\"submit\"\n                variant=\"outline-primary\"\n              >\n                <FontAwesomeIcon icon={faSave} />\n              </Button>\n            </InputGroup>\n          </Form>\n        )\n        : (\n          <h2 className=\"text-center mb-4\">\n            {name}\n            <Button\n              className=\"ml-4\"\n              onClick={toggleEditMode}\n              variant=\"outline-success\"\n            >\n              <FontAwesomeIcon icon={faPencilAlt} />\n            </Button>\n          </h2>\n        )\n      }\n      {movies.length\n        ? (\n          < DragDropContext onDragEnd={onDragEnd}>\n            <Droppable direction=\"horizontal\" droppableId=\"droppable\">\n              {(provided) => (\n                <ListGroup\n                  className=\"d-flex-inline flex-row justify-content-start flex-nowrap overflow-auto\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {movies.map((movie, index) => {\n                    const { id, posterSrc, title } = movie;\n                    return (\n                      <QueueItem\n                        key={id}\n                        id={id}\n                        index={index}\n                        posterSrc={posterSrc}\n                        removeFromQueue={getRemoveFromQueueFunction(id)}\n                        title={title}\n                      />\n                    );\n                  })}\n                  {provided.placeholder}\n                </ListGroup>\n              )}\n            </Droppable>\n          </DragDropContext>\n        )\n        : (\n          <>\n            <p>You don't have any movies in this queue.</p>\n            <p><Link className=\"text-secondary\" to=\"/disocver\">Discover new movies</Link></p>\n            <p><Link className=\"text-secondary\" to=\"/search\">Search for movies</Link></p>\n          </>\n        )\n      }\n    </div >\n  )\n}\n\nQueue.propTypes = {\n  changeQueue: PropTypes.func.isRequired,\n  getRemoveFromQueueFunction: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  remove: PropTypes.func,\n  reorder: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    posterSrc: PropTypes.string,\n    title: PropTypes.string,\n  })),\n}\n\nexport default Queue;\n","import React from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { queueItemReorder, queueItemRemove, queueChange, queueAdd, queueRemove } from '../../actions';\nimport Queue from './Queue';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Queues = () => {\n  const dispatch = useDispatch();\n  const queueList = useSelector(state => state.queues.queueList, shallowEqual);\n\n  const getReorderFunction = (queueId) => (start, end) => {\n    dispatch(queueItemReorder(\n      queueId,\n      start,\n      end,\n    ));\n  };\n\n  const getRemoveFromQueueFunction = (queueId) => (movieId) => () => {\n    dispatch(queueItemRemove(queueId, movieId));\n  };\n\n  const getChangeQueueFunction = (queueId) => (changes) => {\n    dispatch(queueChange(queueId, changes));\n  };\n\n  const getRemoveFunction = (queueId) => {\n    if (queueList.length === 1) return null;\n    return () => dispatch(queueRemove(queueId));\n  }\n\n  const handleAddNew = () => {\n    dispatch(queueAdd('New Watchlist'));\n  };\n\n  return (\n    <>\n      <h1 className='text-center mb-5'>\n        My Queues\n        <Button\n          className=\"ml-4\"\n          onClick={handleAddNew}\n          variant=\"outline-success\"\n        >\n          <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      </h1>\n      <div className=\"d-flex mt-4 flex-wrap justify-content-around w-100\">\n        {queueList.map(queue => (\n          <Queue\n            key={queue.id}\n            changeQueue={getChangeQueueFunction(queue.id)}\n            movies={queue.movies}\n            name={queue.name}\n            remove={getRemoveFunction(queue.id)}\n            reorder={getReorderFunction(queue.id)}\n            getRemoveFromQueueFunction={getRemoveFromQueueFunction(queue.id)}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Queues;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <Redirect to='/discover' />\n  )\n}\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { discoverMoviesRequest } from './actions';\nimport Navigation from './Navigation';\nimport NotificationContainer from './components/NotificationContainer';\nimport Discover from './pages/Discover';\nimport Search from './pages/Search';\nimport Queues from './pages/Queues';\nimport Home from './pages/Home';\nimport './custom.scss';\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(discoverMoviesRequest());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <NotificationContainer />\n        <Switch>\n          <Route path=\"/discover\">\n            <Discover />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/queues\">\n            <Queues />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\n  error: false,\n  firstLoad: true,\n  isLoading: false,\n  movies: [],\n};\n\nconst discoverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DISCOVER_MOVIES_REQUEST':\n      return { ...state, error: false, firstLoad: false, isLoading: true };\n    case 'DISCOVER_MOVIES_SUCCESS':\n      return {\n        ...state, error: false, isLoading: false, movies: action.payload,\n      };\n    case 'DISCOVER_MOVIES_ERROR':\n      return { ...state, error: action.payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport default discoverReducer;\n","const initialState = {\n  error: false,\n  firstLoad: true,\n  isLoading: false,\n  movies: [],\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'QUERY_MOVIES_REQUEST':\n      return { ...state, error: false, firstLoad: false, isLoading: true };\n    case 'QUERY_MOVIES_SUCCESS':\n      return { ...state, error: false, isLoading: false, movies: action.payload };\n    case 'QUERY_MOVIES_ERROR':\n      return { ...state, error: action.payload, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","const initialState = {\n  nextId: 2,\n  queueList: [\n    {\n      id: 1,\n      name: 'Watchlist',\n      movies: [],\n    },\n  ],\n};\n\nconst addQueue = (state, action) => {\n  const { name } = action.payload;\n  const newQueue = {\n    id: state.nextId,\n    name,\n    movies: [],\n  };\n  const newQueueList = [...state.queueList, newQueue];\n  return { ...state, queueList: newQueueList, nextId: state.nextId + 1 };\n};\n\nconst removeQueue = (state, action) => {\n  const { queueId } = action.payload;\n  const queueIndex = state.queueList.findIndex(queue => queue.id === queueId);\n  if (queueIndex === -1) {\n    return state;\n  }\n  const queueListCopy = [...state.queueList];\n  queueListCopy.splice(queueIndex, 1);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst reorderQueue = (state, action) => {\n  const { startPos, endPos } = action.payload;\n  const queueListCopy = [...state.queueList];\n  const queueToMove = queueListCopy[startPos];\n  // remove queue from start position\n  queueListCopy.splice(startPos, 1);\n  // then add it back at end position\n  queueListCopy.splice(endPos, 0, queueToMove);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst changeQueue = (state, action) => {\n  const { queueId, changes } = action.payload;\n  const queueIndex = state.queueList.findIndex(queue => queue.id === queueId);\n  if (queueIndex === -1) {\n    return state;\n  }\n  // don't mutate state directly\n  const queueListCopy = [...state.queueList];\n  const queueToChange = queueListCopy[queueIndex];\n  const newQueue = { ...queueToChange, ...changes };\n  queueListCopy.splice(queueIndex, 1, newQueue);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst addItemToQueue = (state, action) => {\n  const { queueId, movie } = action.payload;\n  const queueIndex = state.queueList.findIndex(queue => queue.id === queueId);\n  if (queueIndex === -1) {\n    return state;\n  }\n  const oldQueue = { ...state.queueList[queueIndex] };\n  const newMovies = [...oldQueue.movies, movie];\n  const newQueue = { ...oldQueue, movies: newMovies };\n  // don't mutate state.queueList directly\n  const queueListCopy = [...state.queueList];\n  queueListCopy.splice(queueIndex, 1, newQueue);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst reorderQueueItem = (state, action) => {\n  const { queueId, startPos, endPos } = action.payload;\n  const queueIndex = state.queueList.findIndex(queue => queue.id === queueId);\n  if (queueIndex === -1) {\n    return state;\n  }\n  const oldQueue = { ...state.queueList[queueIndex] };\n  // don't mutate state directly\n  const moviesCopy = [...oldQueue.movies];\n  const movieToMove = moviesCopy[startPos];\n  // remove movie from queue\n  moviesCopy.splice(startPos, 1);\n  // add movie back to queue at end position\n  moviesCopy.splice(endPos, 0, movieToMove);\n  const newQueue = { ...oldQueue, movies: moviesCopy };\n  const queueListCopy = [...state.queueList];\n  queueListCopy.splice(queueIndex, 1, newQueue);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst removeQueueItem = (state, action) => {\n  const { queueId, movieId } = action.payload;\n  const queueIndex = state.queueList.findIndex(queue => queue.id === queueId);\n  if (queueIndex === -1) {\n    return state;\n  }\n  const oldQueue = { ...state.queueList[queueIndex] };\n  // don't mutate state directly\n  const moviesCopy = [...oldQueue.movies];\n  const movieIndex = moviesCopy.findIndex(movie => movie.id === movieId);\n  if (movieIndex === -1) {\n    return state;\n  };\n  moviesCopy.splice(movieIndex, 1);\n  const newQueue = { ...oldQueue, movies: moviesCopy };\n  const queueListCopy = [...state.queueList];\n  queueListCopy.splice(queueIndex, 1, newQueue);\n  return { ...state, queueList: queueListCopy };\n};\n\nconst queuesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'QUEUE_ADD':\n      return addQueue(state, action);\n    case 'QUEUE_REMOVE':\n      return removeQueue(state, action);\n    case 'QUEUE_REORDER':\n      return reorderQueue(state, action);\n    case 'QUEUE_CHANGE':\n      return changeQueue(state, action);\n    case 'QUEUE_ITEM_ADD':\n      return addItemToQueue(state, action);\n    case 'QUEUE_ITEM_REORDER':\n      return reorderQueueItem(state, action);\n    case 'QUEUE_ITEM_REMOVE':\n      return removeQueueItem(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default queuesReducer;","const initialState = {\n  nextId: 1,\n  notificationList: [\n  ],\n};\n\nconst addNotification = (state, action) => {\n  const { heading, body, variant } = action.payload;\n  const newNotification = {\n    id: state.nextId,\n    heading,\n    body,\n    variant,\n  };\n  const newNotificationList = [...state.notificationList, newNotification];\n  return { ...state, notificationList: newNotificationList, nextId: state.nextId + 1 };\n};\n\nconst removeNotification = (state, action) => {\n  const { notificationId } = action.payload;\n  const notificationIndex = state.notificationList.findIndex(notification => notification.id === notificationId);\n  if (notificationIndex === -1) {\n    return state;\n  }\n  const notificationListCopy = [...state.notificationList];\n  notificationListCopy.splice(notificationIndex, 1);\n  return { ...state, notificationList: notificationListCopy };\n};\n\nconst notificationsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NOTIFICATION_ADD':\n      return addNotification(state, action);\n    case 'NOTIFICATION_REMOVE':\n      return removeNotification(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default notificationsReducer;","import { combineReducers } from 'redux';\nimport discoverReducer from './discoverReducer';\nimport searchReducer from './searchReducer';\nimport queuesReducer from './queuesReducer';\nimport notificationsReducer from './notificationsReducer';\n\nconst rootReducer = combineReducers({\n  discover: discoverReducer,\n  notifications: notificationsReducer,\n  queues: queuesReducer,\n  search: searchReducer,\n});\n\nexport default rootReducer;","const options = {\n  method: 'GET',\n  mode: 'cors',\n};\n\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\nasync function discoverMovies(filters = {}) {\n  Object.keys(filters).forEach(key => {\n    if (filters[key] === 'Any') filters[key] = null;\n  });\n  const { genre, maxYear, minYear, maxRating } = filters;\n\n  const genreParam = genre ? `&with_genres=${genre}` : '';\n  const maxYearParam = maxYear ? `&release_date.lte=${maxYear}-12-31` : '';\n  const minYearParam = minYear ? `&release_date.gte=${minYear}-01-01` : '';\n  const maxRatingParam = maxRating ? `&certification.lte=${maxRating}` : '&certification.lte=R';\n\n  const queryString = `${genreParam}${maxYearParam}${minYearParam}${maxRatingParam}`;\n\n  const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}`\n    + '&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false'\n    + `&page=1&certification_country=US${queryString}`;\n  let movies = [];\n  let totalResults = 60;\n\n  while (movies.length < totalResults) {\n    try {\n      const response = await fetch(url, options);\n      const json = await (response.json());\n      if (json.success === false) throw json.status_message;\n      if (json.total_results < 60) totalResults = json.total_results;\n      movies = [...movies, ...json.results];\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  return movies\n}\n\n\nexport default discoverMovies;\n","const options = {\n  method: 'GET',\n  mode: 'cors',\n};\n\nconst apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\nasync function searchMovies(query) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US`\n    + `&query=${query}&page1&include_adult=false`\n  let movies = [];\n  let totalResults = 60;\n\n  while (movies.length < totalResults) {\n    try {\n      const response = await fetch(url, options);\n      const json = await (response.json());\n      if (json.success === false) throw json.status_message;\n      if (json.total_results < 60) totalResults = json.total_results;\n      movies = [...movies, ...json.results];\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  return movies;\n};\n\n\nexport default searchMovies;\n","import {\n  call, put, all, takeEvery, takeLatest,\n} from 'redux-saga/effects';\nimport discoverMovies from '../endpoints/discoverMovies';\nimport searchMovies from '../endpoints/searchMovies';\nimport { queryMoviesSuccess, queryMoviesError, discoverMoviesError, discoverMoviesSuccess, notificationRemove } from '../actions';\nimport { QUERY_MOVIES_REQUEST, DISCOVER_MOVIES_REQUEST, NOTIFICATION_ADD, QUEUE_ADD } from '../actions/types';\n\nconst delay = time => new Promise(resolve => setTimeout(resolve, time));\n\nfunction* discoverMoviesSaga(action) {\n  try {\n    const movies = yield call(discoverMovies, action.payload);\n    yield put(discoverMoviesSuccess(movies));\n  } catch (error) {\n    yield put(discoverMoviesError(error.message));\n  }\n};\n\nfunction* watchDiscoverMovies() {\n  yield takeLatest(DISCOVER_MOVIES_REQUEST, discoverMoviesSaga);\n};\n\nfunction* queryMoviesSaga(action) {\n  try {\n    const movies = yield call(searchMovies, action.payload);\n    yield put(queryMoviesSuccess(movies));\n  } catch (error) {\n    yield put(queryMoviesError(error.message));\n  }\n};\n\nfunction* watchQueryMovies() {\n  yield takeLatest(QUERY_MOVIES_REQUEST, queryMoviesSaga);\n};\n\nfunction* removeNotificationAfterDelay(action) {\n  const { notificationId } = action.payload;\n  yield call(delay, 2000);\n  yield put(notificationRemove(notificationId));\n};\n\nexport function* watchAddNotification() {\n  yield takeEvery(NOTIFICATION_ADD, removeNotificationAfterDelay);\n};\n\nexport function* scrollToBottom() {\n  // wait for new queue to be added to DOM\n  yield call(delay, 10)\n  yield window.scrollTo(0, document.body.scrollHeight);\n}\n\nexport function* watchAddQueue() {\n  yield takeEvery(QUEUE_ADD, scrollToBottom);\n};\n\nexport default function* sagas() {\n  yield all([\n    watchDiscoverMovies(),\n    watchQueryMovies(),\n    watchAddNotification(),\n    watchAddQueue(),\n  ]);\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport sagas from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware),\n  );\n\n  sagaMiddleware.run(sagas);\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"queue\":\"Queues_queue__YBT_p\",\"remove_queue\":\"Queues_remove_queue__6640e\",\"form\":\"Queues_form__4Rv58\",\"save\":\"Queues_save__1js-y\",\"name_input\":\"Queues_name_input__2hdtn\",\"queue-item\":\"Queues_queue-item__27GU0\",\"image_overlay\":\"Queues_image_overlay__2CLrl\",\"image\":\"Queues_image__3Uc9b\",\"remove_item\":\"Queues_remove_item__2Tqib\",\"remove\":\"Queues_remove__1dqeq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_group\":\"Discover_form_group__3CYjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-input\":\"Search_search-input__2Zvo8\",\"search-button\":\"Search_search-button__2AApJ\"};"],"sourceRoot":""}